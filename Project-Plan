Program structure   (last updated: 08/10/2021)

The objective of this application is to display all elements from menu.xml
in a scrollable list, so that any entry may be edited, deleted or moved up
or down, or new entries may be inserted.

Each line in menu.xml is enclosed in pairs of brackets. The framework is:
   Type/Name/Label...End (the actual format can be implied from Type)
   eg:
   <menu id="root-menu-123456" label="Openbox 3">
      <item label="Firefox">
         <action name="Execute">
            <execute>firefox</execute>
         </action>
      </item>
   </menu>
   <separator label="Games"/>

Present the user with a simplified display of the menu.xml file.

User selects a line and an action
     Edit the element on that line
     Move the element on that line Up
     Move the element on that line Down
     Insert a new element on that line
     Delete the element on that line
     Quit

If they choose Edit, the display will then show the selected item in detail, with edit fields:

Menus
A new menu can be created inside an existing menu.
End markers for menus and items will be added automatically.
A new menu is created with a dummy item inside.

Moving
'Move Up' or 'Move Down' will move the selected element up or down one display line.
If an item at the top of a menu is moved up, it will move up out of the menu; similarly
if an item at the bottom of a menu is moved down, it will move down out of the menu. 
The top item of the main menu will not be offered 'Move Up'; similarly, the bottom item
of the main menu will not be offered 'Move Down'. 
If a menu header is moved up or down, its contents move with it. 
A menu cannot be moved into another menu, but a new menu can be created inside an
existing menu, and items moved into it.

Delete
If user chooses 'Delete' a confirmation will be offered. 
If the selected line is a menu header, they will also be offered the choice of deleting
the contents as well, or just the header.

1. Copy menu.xml to a temporary working file;
2. Copy each header from the working file into two other files:
      A display file, containing just the display data;
      An indexing file with each record numbered to match the line in the
      working file;     (this is for linking to the working file)
3. Print the display file on screen, with each line indented as desired;
4. Respond to user input as defined above;
